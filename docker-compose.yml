services:
  db:
    image: mysql:8.1.0
    container_name: db
    restart: unless-stopped
    networks:
      - tt-network
    ports:
      - "3306:3306"
    env_file:
      - tasktracker-backend/app.env

  redis:
    container_name: redis
    hostname: redis
    image: redis:7.4-rc
    networks:
      - tt-network
    ports:
      - '6379:6379'

  kafka:
    image: bitnami/kafka:3.3.2
    container_name: kafka
    hostname: kafka
    ports:
      - '29092:29092'
      - '9092:9092'
    networks:
      - tt-network
    env_file:
      - tasktracker-backend/app.env

  app:
    build: ./tasktracker-backend
    networks:
      - tt-network
    ports:
      - '8080:8080'
    env_file:
      - tasktracker-backend/app.env
    depends_on:
      - db
      - redis
      - kafka

  email_sender:
    build: ./tasktracker-email-sender
    networks:
      - tt-network
    ports:
      - '8070:8070'
    env_file:
      - tasktracker-backend/app.env
    depends_on:
      - kafka

  front:
    build: ./tasktracker-front
    networks:
      - tt-network
    ports:
      - "8088:8088"

  scheduler:
    build: ./tasktracker-scheduler
    networks:
      - tt-network
    ports:
      - '8060:8060'
    env_file:
      - tasktracker-backend/app.env
    depends_on:
      - kafka
      - db

networks:
  tt-network:
    driver: bridge

volumes:
  db_data: